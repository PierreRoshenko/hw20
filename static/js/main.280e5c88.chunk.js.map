{"version":3,"sources":["components/timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","useState","time","timerValue","setValue","going","isGoing","setState","useEffect","ticks","setInterval","step","onTick","convertor","console","log","clearInterval","ms","min","Math","floor","sec","toFixed","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAEcA,EAAQ,SAACC,GAAS,IAAD,EACGC,mBAASD,EAAME,MADlB,mBACrBC,EADqB,KACTC,EADS,OAEFH,mBAASD,EAAMK,OAFb,mBAErBC,EAFqB,KAEZC,EAFY,KAI3BC,qBAAU,WACN,IAAMC,EAAQC,aAAY,WACnBJ,GAASH,EAAW,GACnBC,EAASD,EAAWH,EAAMW,MAC1BX,EAAMY,OAAOC,EAAUV,EAAWH,EAAMW,QACjCL,GAASH,GAAY,GAC5BC,EAASJ,EAAME,MACfK,GAAS,GACTO,QAAQC,IAAI,cACZC,cAAcP,IAEdL,GADQE,GAASH,GAAY,EACpBH,EAAME,KAENC,KAEfH,EAAMW,MAER,OAAO,WACHK,cAAcP,MAEpB,CAACN,EAAWG,EAAQN,IAEvB,IAAMa,EAAY,SAACI,GACXA,EAAG,IACFA,EAAG,GAEP,IAAMC,EAAMC,KAAKC,MAAMH,EAAK,KACtBI,GAAQJ,EAAK,IAAS,KAAMK,QAAQ,GAC1C,OAAOJ,EAAM,KAAOG,EAAM,GAAK,IAAM,IAAMA,GAK/C,OACI,sBAAKE,UAAU,QAAf,UACI,mBAAGA,UAAU,eAAb,SAA6BV,EAAUV,KACvC,wBAAQoB,UAAU,MAAMC,QALlB,kBAAajB,GAARD,IAKX,SAA2CA,EAAQ,QAAQ,iBC7BxDmB,MAVf,WACE,OACE,sBAAKF,UAAU,MAAf,UACC,cAAC,EAAD,CAAOrB,KAAQ,IAAMS,KAAO,IAAMN,OAAO,EAAOO,OAAS,SAACV,GAAD,OAAQY,QAAQC,IAAR,6BAAkCb,OACnG,cAAC,EAAD,CAAOA,KAAQ,KAASS,KAAO,IAAMN,OAAO,EAAMO,OAAS,SAACV,GAAD,OAAQY,QAAQC,IAAR,6BAAkCb,WCK3FwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.280e5c88.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nexport  const Timer = (props)=>{\r\n    const[timerValue, setValue] = useState(props.time)\r\n    const[isGoing, setState]=useState(props.going)\r\n\r\n    useEffect(()=>{\r\n        const ticks = setInterval(()=>{\r\n            if(isGoing&&timerValue>0){\r\n                setValue(timerValue-props.step)\r\n                props.onTick(convertor(timerValue-props.step))\r\n            } else if (isGoing&&timerValue<=0){\r\n                setValue(props.time)\r\n                setState(false)\r\n                console.log(\"Time over!\");\r\n                clearInterval(ticks)\r\n            } else if (!isGoing&&timerValue<=0){\r\n                setValue(props.time)\r\n            } else {\r\n                setValue(timerValue)\r\n            }\r\n        },props.step)\r\n\r\n        return(()=>{\r\n            clearInterval(ticks)\r\n        })\r\n    },[timerValue,isGoing,props])\r\n\r\n   const convertor = (ms)=>{\r\n        if(ms<0){\r\n            ms=0\r\n        }\r\n        const min = Math.floor(ms / 60000);\r\n        const sec = ((ms % 60000) / 1000).toFixed(0);\r\n        return min + \":\" + (sec < 10 ? '0' : '') + sec;\r\n    }\r\n\r\n    const pause = ()=> isGoing?setState(false):setState(true)\r\n    \r\n    return(\r\n        <div className=\"timer\">\r\n            <p className=\"timer_digits\">{convertor(timerValue)}</p>\r\n            <button className='btn' onClick = {pause}>{isGoing?'Pause':'Continue'}</button>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport {Timer} from './components/timer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Timer time = {5000} step ={1000} going={false} onTick ={(time)=>console.log(`There is time left ${time}`)}/>\n     <Timer time = {5900000} step ={2000} going={true} onTick ={(time)=>console.log(`There is time left ${time}`)}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}